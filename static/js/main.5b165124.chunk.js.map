{"version":3,"sources":["components/exercises/Form.jsx","context.js","components/exercises/Dialogs/Create.jsx","components/layouts/Header.jsx","components/layouts/Footer.jsx","components/exercises/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","console","log","FormControl","width","_Component","_temp","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","getInitialState","handleChange","name","_ref","value","target","setState","defineProperty","handleSubmit","props","onSubmit","objectSpread","id","title","toLocaleLowerCase","replace","inherits","createClass","key","exercise","description","muscles","_ref2","_this$state","_this$props","classes","categories","react_default","a","createElement","TextField_default","label","onChange","margin","className","FormControl_default","InputLabel_default","htmlFor","Select_default","map","category","MenuItem_default","multiline","rows","Button_default","color","variant","onClick","disabled","Component","createContext","Provider","Consumer","withContext","assign","open","handleToggle","handleFormSubmit","onCreate","react","Fab_default","size","Add_default","Dialog_default","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","Form","flex","onExerciseCreate","index_es","position","Create","Footer","onIndexSelect","e","index","onCategorySelect","getIndex","_this$props2","findIndex","group","_this$props3","indicatorColor","textColor","centered","withWidth","_paper","_container","paper","padding","spacing","unit","overflowY","breakpoints","up","marginTop","height","down","@global","html, body, #root","container","item","exercisesByMuscles","editMode","onSelect","_ref$exercise","_ref$exercise$title","_ref$exercise$descrip","onDelete","onSelectEdit","onEdit","xs","sm","_ref3","slicedToArray","exercises","style","textTransform","List_default","component","_ref4","ListItem_default","button","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","Edit_default","Delete_default","App","handleCategorySelect","handleExerciseSelect","find","ex","handleExerciseCreate","toConsumableArray","handleExerciseDelete","filter","handleExerciseSelectEdit","handleExerciseEdit","_ref5","getContext","getExercisesByMuscles","initExercises","reduce","entries","CssBaseline_default","Header","components_exercises","layouts_Footer","Boolean","window","location","hostname","match","red","createMuiTheme","palette","secondary","main","amber","A400","light","dark","type","ReactDOM","render","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b165124.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles'\n\n\nconst styles = theme => console.log(theme) || ({\n    FormControl: {\n        width: 500\n    }\n})\n\nexport default withStyles(styles)(class extends Component {\n    state = this.getInitialState()\n\n    getInitialState() {\n        const { exercise } = this.props\n\n        return exercise ? exercise : {\n            title: '',\n            description: '',\n            muscles: ''\n        }\n    }\n\n    componentWillReceiveProps({ exercise }) {\n        console.log('fired')\n        this.setState({\n            ...exercise\n        })\n    }\n    // static getDerivedStateFromProps({ exercise }) {\n    //     console.log('fired')\n    //     console.log(exercise)\n\n    //     return exercise || null\n    // }\n\n    handleChange = name => ({ target: { value }}) => {\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = () => {\n        //TODO: validate\n\n        this.props.onSubmit({\n            id: this.state.title.toLocaleLowerCase().replace(/ /g, '-'), //id will be overwrited if exist\n            ...this.state\n        })\n\n\n        //to clear form and to close:\n        this.setState(this.getInitialState()\n        //     {\n        //     open: false,\n        //     exercise: {\n        //         title: '',\n        //         description: '',\n        //         muscles: ''\n        //     }\n        // }\n        )\n    }\n\n    render() {\n        const { title, description, muscles } = this.state\n        const { classes, exercise, muscles: categories } = this.props\n        console.log('test',muscles)\n        return <form>\n            <TextField\n                label=\"Title\"\n                value={title}\n                onChange={this.handleChange('title')}\n                margin=\"normal\"\n                className={classes.FormControl}\n            />\n            <br/>\n            <FormControl className={classes.FormControl}>\n                <InputLabel htmlFor=\"muscles\">Muscles</InputLabel>\n                    <Select\n                        value={muscles}\n                        onChange={this.handleChange('muscles')}\n                    >\n                        {categories.map(category => \n                            <MenuItem key={category} value={category}>\n                                {category}\n                            </MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n                <br/>\n            <TextField\n                label=\"Description\"\n                value={description}\n                onChange={this.handleChange('description')}\n                multiline\n                rows=\"4\"\n                margin=\"normal\"\n                className={classes.FormControl}\n            />\n            <br/>\n            <Button \n                color=\"primary\" \n                variant=\"contained\"\n                onClick={this.handleSubmit}\n                disabled={!title || !muscles}\n            >\n                {exercise ? 'Edit' : 'Create'}\n            </Button>\n        </form>\n    }\n})\n","import React, { createContext } from 'react'\n\nexport const { Provider, Consumer } = createContext()\n\nexport const withContext = Component => props => (\n  <Consumer>{value => <Component {...value} {...props} />}</Consumer>\n)","import React, { Fragment, Component } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\n\nimport Add from '@material-ui/icons/Add'\n\nimport Form from '../Form'\nimport { withContext } from '../../../context'\n\n\nclass CreateDialog extends Component {\n    state = {\n        open: false,\n    }\n\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    handleFormSubmit = exercise => {\n        this.handleToggle()\n\n        this.props.onCreate(exercise)\n    }\n\n    render() {\n        const { open } = this.state,\n              { muscles } = this.props\n        console.log('Create', this.props)\n              \n        return <Fragment>\n            <Fab \n                onClick={this.handleToggle} \n                color=\"secondary\" \n                size=\"small\"\n            >\n                <Add />\n            </Fab>\n            <Dialog\n                open={open}\n                onClose={this.handleToggle}\n                // aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle>\n                    Create a new Exercise\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please fill out the form below.\n                    </DialogContentText>\n                    <Form \n                        muscles={muscles}\n                        onSubmit={this.handleFormSubmit}\n                    />\n                </DialogContent>\n            </Dialog>\n        </Fragment>\n    }\n}\n\nexport default withContext(CreateDialog)","import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport CreateDialog from '../exercises/Dialogs/Create'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n    flex: {\n        flex: 1\n    }\n}\n\nexport default withStyles(styles) ( \n({ classes, muscles, onExerciseCreate }) =>\n    <AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant=\"headline\" color=\"inherit\" className={classes.flex}>\n                Exercises Database\n            </Typography>\n            <CreateDialog \n                muscles={muscles}\n                onCreate={onExerciseCreate}\n            />\n        </Toolbar>\n    </AppBar>\n)\n","import React, { Component } from 'react';\nimport { Tabs, Tab, AppBar } from '@material-ui/core'\nimport withWidth from '@material-ui/core/withWidth'\nimport { withContext } from '../../context'\n\nclass Footer extends Component {\n// ({ muscles, category, onSelect, width }) => {\n    // console.log('withWidth', width)\n    // const index = category\n    //     ? muscles.findIndex(group => group === category) + 1\n    //     : 0\n\n    onIndexSelect = (e, index) => {\n        const { onCategorySelect, muscles } = this.props\n        onCategorySelect(index === 0 ? '' : muscles[index - 1])\n    }\n\n    getIndex = () => {\n        const { category, muscles } = this.props\n        return category\n          ? muscles.findIndex(group => group === category) + 1\n          : 0\n    }\n\n    render(){\n        const { width, muscles } = this.props\n        return <AppBar position=\"static\">\n            <Tabs\n                 value={this.getIndex()}\n                 onChange={this.onIndexSelect}\n                indicatorColor=\"secondary\"\n                textColor=\"secondary\"\n                centered ={width !== 'xs'}\n                variant={width === \"xs\" ? \"scrollable\" : \"standard\"}\n            >\n            <Tab label=\"All\" />\n                {muscles.map(group =>\n                    <Tab key={group} label={group} />\n                )}\n            </Tabs>\n        </AppBar>\n    }\n}\n\nexport default withContext(withWidth()(Footer))\n    ","import React, { Fragment } from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Form from './Form'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withContext } from '../../context'\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing.unit * 2,\n        // padding: 20,\n        // marginTop: 5,\n        // height: 'calc(100% - 61px)',\n        overflowY: 'auto',\n        [theme.breakpoints.up('sm')]: {\n            marginTop: 5,\n            height: 'calc(100% - 53px)',\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: '100%'\n        }\n    },\n    '@global': {\n        'html, body, #root': {\n            height: '100%'\n        }\n    },\n    container: {\n        // height: 'calc(100% - 64px - 48px)'\n        [theme.breakpoints.up('sm')]: {\n            height: 'calc(100% - 64px - 48px)'\n        },\n        [theme.breakpoints.down('xs')]: {\n            height: 'calc(100% - 56px - 48px)'\n        }\n    },\n    item: {\n        [theme.breakpoints.down('xs')]: {\n            height: '49%'\n        }\n    }\n})\n\n\nconst Exercises = ({ \n    classes,\n    exercisesByMuscles, \n    category,\n    muscles,\n    editMode, \n    onSelect,\n    exercise,\n    exercise: { \n        id, \n        title = 'Welcome!', \n        description ='Plese select an exercise from the list on the left'\n    },\n    onDelete,\n    onSelectEdit,\n    onEdit\n}) => \n    <Grid container className={classes.container}>\n        <Grid item className={classes.item} xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                {exercisesByMuscles.map(([group, exercises]) => \n                    !category || category === group\n                        ?   <Fragment key={group}>\n                                <Typography\n                                    variant=\"headline\"\n                                    color=\"secondary\"\n                                    style={{textTransform: 'capitalize'}}\n                                >\n                                    {group}\n                                </Typography>\n                                <List component=\"ul\">\n                                    {exercises.map(({ id, title }) => \n                                        <ListItem \n                                            key={id}\n                                            button\n                                            onClick={() => onSelect(id)}\n                                        >\n                                            <ListItemText primary={title} />\n                                            <ListItemSecondaryAction>\n                                                <IconButton onClick={()=>onSelectEdit(id)}>\n                                                    <EditIcon color=\"primary\" />\n                                                </IconButton>\n                                                <IconButton color=\"primary\" onClick={()=>onDelete(id)}>\n                                                    <DeleteIcon/>\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    )}\n                                </List>\n                            </Fragment>\n                        : null\n\n                )}\n            </Paper>\n        </Grid>\n        <Grid item className={classes.item} xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                {editMode \n                    ?   <Form\n                            key={id}\n                            exercise={exercise}\n                            muscles={muscles}\n                            onSubmit={onEdit}\n                        />\n                    :   <Fragment>\n                            <Typography\n                                variant=\"display1\"\n                                color=\"secondary\"\n                            >\n                                {title}\n                            </Typography>\n                            <Typography\n                                variant=\"subheading\"\n                                style={{marginTop: 20}}\n                            >\n                                {description}\n                            </Typography>\n                        </Fragment>\n                }\n            </Paper>\n        </Grid>\n    </Grid>\n\n\nexport default withContext(withStyles(styles)(Exercises))","export const muscles = [\n    'shoulders', 'chest', 'arms', 'back', 'legs'\n]\n  \n  export const exercises = [\n    {\n      id: 'overhead-press',\n      title: 'Overhead Press',\n      description: 'Delts exercise...',\n      muscles: 'shoulders'\n    },\n    {\n      id: 'dips',\n      title: 'Dips',\n      description: 'Triceps exercise...',\n      muscles: 'arms'\n    },\n    {\n      id: 'barbell-curls',\n      title: 'Barbell Curls',\n      description: 'Biceps exercise...',\n      muscles: 'arms'\n    },\n    {\n      'id': 'bench-press',\n      title: 'Bench Press',\n      description: 'Chest exercise...',\n      muscles: 'chest'\n    },\n    {\n      id: 'pull-ups',\n      title: 'Pull Ups',\n      description: 'Back and biceps exercise...',\n      muscles: 'back'\n    },\n    {\n      id: 'deadlifts',\n      title: 'Deadlifts',\n      description: 'Back and leg exercise...',\n      muscles: 'back'\n    },\n    {\n      id: 'squats',\n      title: 'Squats',\n      description: 'Legs exercise...',\n      muscles: 'legs'\n    },\n  ]","import React, { Component, Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Header, Footer } from './components/layouts'\nimport Exercises from './components/exercises'\nimport { muscles, exercises } from './store.js'\nimport { Provider } from './context'\n\nclass App extends Component {\n  state = {\n    exercises,\n    exercise: {},\n  }\n\n  getExercisesByMuscles() {\n    const initExercises = muscles.reduce((exercises, category) => ({ //!(1)! because when we delete all the exercises the categories also disappear\n      ...exercises,\n      [category]: []\n    }), {})\n    // console.log(muscles, initExercises)\n\n    return Object.entries(this.state.exercises.reduce((exercises, exercise) => {\n        const { muscles } = exercise\n\n        exercises[muscles] = [...exercises[muscles], exercise]\n\n        // exercises[muscles] = exercises[muscles]\n        //   ? [...exercises[muscles], exercise]\n        //   : [exercise]\n        \n        return exercises\n      }, initExercises) //!(1)! here used to be a {} instead of a initExercises\n    )\n  }\n\n  handleCategorySelect = category => {\n    this.setState({\n      category\n    })\n  }\n\n  handleExerciseSelect = id => {\n    this.setState(({ exercises }) => ({\n      exercise: exercises.find(ex => ex.id === id),\n      editMode: false\n    }))\n  }\n\n  handleExerciseCreate = exercise => {\n    this.setState(({ exercises }) => ({\n      exercises: [\n        ...exercises,\n        exercise\n      ]\n    }))\n  }\n\n  // handleExerciseDelete = id => {\n  //   this.setState(({ exercises }) => ({\n  //     exercises: exercises.filter(ex => ex.id !== id),\n  //     editMode: false,\n  //     exercise: {}\n  //   }))\n  // }\n  handleExerciseDelete = id =>\n    this.setState(({ exercises, exercise, editMode }) => ({\n      exercises: exercises.filter(ex => ex.id !== id),\n      editMode: exercise.id === id ? false : editMode,\n      exercise: exercise.id === id ? {} : exercise\n    }))\n\n  handleExerciseSelectEdit = id => \n    this.setState(({ exercises }) => ({\n      exercise: exercises.find(ex => ex.id === id),\n      editMode: true\n    }))\n\n  handleExerciseEdit = exercise =>\n    this.setState(({ exercises }) => ({\n      exercises: [\n        ...exercises.filter(ex => ex.id !== exercise.id),\n        exercise\n      ],\n      exercise\n    }))\n  \n \n    getContext = () => ({\n      muscles,\n      ...this.state,\n      exercisesByMuscles: this.getExercisesByMuscles(),\n      onCategorySelect: this.handleCategorySelect,\n      onCreate: this.handleExerciseCreate,\n      onEdit: this.handleExerciseEdit,\n      onSelectEdit: this.handleExerciseSelectEdit,\n      onDelete: this.handleExerciseDelete,\n      onSelect: this.handleExerciseSelect\n    })\n\n  render() {\n    // const exercises = this.getExercisesByMuscles()\n    // const { category, exercise, editMode } = this.state\n\n    return (\n      <Provider value={this.getContext()}>\n        <Fragment>\n          <CssBaseline />\n\n          <Header \n            muscles={muscles}\n            onExerciseCreate={this.handleExerciseCreate}\n          />\n          <Exercises\n            // exercise={exercise}\n            // category={category}\n            // muscles={muscles}\n            // exercises={exercises}\n            // editMode={editMode}\n            // onSelect={this.handleExerciseSelect}\n            // onDelete={this.handleExerciseDelete}\n            // onSelectEdit={this.handleExerciseSelectEdit}\n            // onEdit={this.handleExerciseEdit}\n          />\n          <Footer\n            // category={category}\n            // muscles={muscles}\n            // onSelect={this.handleCategorySelect}\n          />\n        </Fragment>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { red, amber } from '@material-ui/core/colors'\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log(red)\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: red,\n        secondary: {\n            // main: '#ffc107',\n            main: amber.A400,\n            light: amber[200],\n            dark: amber[700]\n        },\n        type: 'dark',\n        spacing: {\n            unit: 10\n        }\n    }\n})\nconsole.log(theme)\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}